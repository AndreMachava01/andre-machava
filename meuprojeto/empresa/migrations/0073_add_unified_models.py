# Generated by Django 5.2.6 on 2025-10-01 11:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('empresa', '0072_add_codigo_to_movimentos'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('PRODUTO', 'Produto'), ('MATERIAL', 'Material')], help_text='Tipo do item (Produto ou Material)', max_length=10)),
                ('nome', models.CharField(help_text='Nome do item', max_length=200)),
                ('codigo', models.CharField(help_text='Código único do item', max_length=50, unique=True)),
                ('codigo_barras', models.CharField(blank=True, help_text='Código de barras do item', max_length=50)),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do item')),
                ('unidade_medida', models.CharField(choices=[('UN', 'Unidade'), ('KG', 'Quilograma'), ('G', 'Grama'), ('L', 'Litro'), ('ML', 'Mililitro'), ('M', 'Metro'), ('CM', 'Centímetro'), ('M2', 'Metro Quadrado'), ('M3', 'Metro Cúbico'), ('CX', 'Caixa'), ('PC', 'Peça'), ('DZ', 'Dúzia'), ('GR', 'Grosa'), ('ROL', 'Rolo'), ('FOL', 'Folha'), ('BAR', 'Barra'), ('TUB', 'Tubo')], default='UN', help_text='Unidade de medida do item', max_length=10)),
                ('preco_custo', models.DecimalField(decimal_places=2, help_text='Preço de custo do item', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('estoque_minimo', models.PositiveIntegerField(default=0, help_text='Quantidade mínima em estoque')),
                ('estoque_maximo', models.PositiveIntegerField(default=0, help_text='Quantidade máxima em estoque')),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('ESGOTADO', 'Esgotado'), ('DESCONTINUADO', 'Descontinuado')], default='ATIVO', help_text='Status do item', max_length=20)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, help_text='Data de cadastro do item')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, help_text='Data da última atualização')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o item')),
                ('produto_tipo', models.CharField(blank=True, choices=[('PRODUTO_FINAL', 'Produto Final'), ('PRODUTO_COMPRADO', 'Produto Comprado'), ('SERVICO', 'Serviço')], help_text='Tipo específico do produto', max_length=20, null=True)),
                ('preco_venda', models.DecimalField(blank=True, decimal_places=2, help_text='Preço de venda do produto', max_digits=10, null=True)),
                ('margem_lucro', models.DecimalField(blank=True, decimal_places=2, help_text='Margem de lucro em percentagem', max_digits=5, null=True)),
                ('material_tipo', models.CharField(blank=True, choices=[('MATERIA_PRIMA', 'Matéria-Prima'), ('INSUMO', 'Insumo'), ('COMPONENTE', 'Componente'), ('EMBALAGEM', 'Embalagem'), ('ACESSORIO', 'Acessório'), ('FERRAMENTA', 'Ferramenta'), ('EQUIPAMENTO', 'Equipamento'), ('OUTRO', 'Outro')], help_text='Tipo específico do material', max_length=20, null=True)),
                ('categoria', models.ForeignKey(help_text='Categoria do item', on_delete=django.db.models.deletion.PROTECT, related_name='itens', to='empresa.categoriaproduto')),
                ('fornecedor_principal', models.ForeignKey(blank=True, help_text='Fornecedor principal do item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itens_principais', to='empresa.fornecedor')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Itens',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MovimentoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único da movimentação', max_length=20, unique=True)),
                ('quantidade', models.PositiveIntegerField(help_text='Quantidade movimentada')),
                ('preco_unitario', models.DecimalField(decimal_places=2, help_text='Preço unitário do item no movimento', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='Valor total do movimento', max_digits=12)),
                ('data_movimento', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora do movimento')),
                ('referencia', models.CharField(blank=True, help_text='Referência do movimento (ex: número da nota fiscal)', max_length=100)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o movimento')),
                ('item', models.ForeignKey(help_text='Item movimentado (produto ou material)', on_delete=django.db.models.deletion.CASCADE, related_name='movimentos', to='empresa.item')),
                ('sucursal', models.ForeignKey(help_text='Sucursal onde ocorreu o movimento', on_delete=django.db.models.deletion.CASCADE, related_name='movimentos_item', to='empresa.sucursal')),
                ('tipo_movimento', models.ForeignKey(help_text='Tipo de movimento', on_delete=django.db.models.deletion.PROTECT, related_name='movimentos_item', to='empresa.tipomovimentostock')),
                ('usuario', models.ForeignKey(help_text='Usuário que registrou o movimento', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Movimento de Item',
                'verbose_name_plural': 'Movimentos de Itens',
                'ordering': ['-data_movimento'],
            },
        ),
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_atual', models.DecimalField(decimal_places=3, default=0, help_text='Quantidade atual em estoque', max_digits=10)),
                ('quantidade_reservada', models.DecimalField(decimal_places=3, default=0, help_text='Quantidade reservada (não disponível)', max_digits=10)),
                ('localizacao', models.CharField(blank=True, help_text='Localização física do item na sucursal', max_length=100)),
                ('data_atualizacao', models.DateTimeField(auto_now=True, help_text='Data da última atualização do estoque')),
                ('item', models.ForeignKey(help_text='Item (produto ou material)', on_delete=django.db.models.deletion.CASCADE, related_name='stocks_sucursais', to='empresa.item')),
                ('sucursal', models.ForeignKey(help_text='Sucursal', on_delete=django.db.models.deletion.CASCADE, related_name='stocks_item', to='empresa.sucursal')),
            ],
            options={
                'verbose_name': 'Stock de Item',
                'verbose_name_plural': 'Stocks de Itens',
                'ordering': ['item__nome'],
                'unique_together': {('item', 'sucursal')},
            },
        ),
    ]
