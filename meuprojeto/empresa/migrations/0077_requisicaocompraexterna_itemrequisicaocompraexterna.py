# Generated by Django 5.2.6 on 2025-10-01 21:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('empresa', '0076_requisicaostock_itemrequisicaostock'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RequisicaoCompraExterna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único da requisição de compra', max_length=20, unique=True)),
                ('status', models.CharField(choices=[('RASCUNHO', 'Rascunho'), ('PENDENTE', 'Pendente'), ('APROVADA', 'Aprovada'), ('ENVIADA', 'Enviada ao Fornecedor'), ('RECEBIDA', 'Recebida'), ('CANCELADA', 'Cancelada')], default='RASCUNHO', help_text='Status da requisição de compra', max_length=20)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a requisição de compra')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('data_envio_fornecedor', models.DateTimeField(blank=True, null=True)),
                ('data_recebimento', models.DateTimeField(blank=True, null=True)),
                ('aprovado_por', models.ForeignKey(blank=True, help_text='Usuário que aprovou a requisição de compra', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requisicoes_compra_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(help_text='Usuário que criou a requisição de compra', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requisicoes_compra_criadas', to=settings.AUTH_USER_MODEL)),
                ('fornecedor', models.ForeignKey(blank=True, help_text='Fornecedor selecionado para a compra', null=True, on_delete=django.db.models.deletion.PROTECT, to='empresa.fornecedor')),
                ('sucursal_solicitante', models.ForeignKey(help_text='Sucursal que solicita a compra', on_delete=django.db.models.deletion.PROTECT, related_name='requisicoes_compra_enviadas', to='empresa.sucursal')),
            ],
            options={
                'verbose_name': 'Requisição de Compra Externa',
                'verbose_name_plural': 'Requisições de Compra Externa',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='ItemRequisicaoCompraExterna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_solicitada', models.PositiveIntegerField(help_text='Quantidade solicitada')),
                ('quantidade_recebida', models.PositiveIntegerField(default=0, help_text='Quantidade efetivamente recebida')),
                ('preco_unitario_estimado', models.DecimalField(decimal_places=2, default=0, help_text='Preço unitário estimado para compra', max_digits=10)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre este item')),
                ('item', models.ForeignKey(blank=True, help_text='Item solicitado (produto ou material)', null=True, on_delete=django.db.models.deletion.CASCADE, to='empresa.item')),
                ('produto', models.ForeignKey(blank=True, help_text='Produto solicitado (sistema antigo)', null=True, on_delete=django.db.models.deletion.CASCADE, to='empresa.produto')),
                ('requisicao', models.ForeignKey(help_text='Requisição de compra a que pertence este item', on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='empresa.requisicaocompraexterna')),
            ],
            options={
                'verbose_name': 'Item de Requisição de Compra Externa',
                'verbose_name_plural': 'Itens de Requisição de Compra Externa',
                'unique_together': {('requisicao', 'item'), ('requisicao', 'produto')},
            },
        ),
    ]
