# Generated by Django 5.2.6 on 2025-09-09 20:58

import django.core.validators
import django.db.models.deletion
import meuprojeto.empresa.models_base
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DadosEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('nuit', models.CharField(max_length=9, unique=True, validators=[meuprojeto.empresa.models_base.validar_nuit])),
                ('alvara', models.CharField(max_length=50, unique=True)),
                ('data_constituicao', models.DateField()),
                ('provincia', models.CharField(max_length=50)),
                ('cidade', models.CharField(max_length=100)),
                ('bairro', models.CharField(max_length=100)),
                ('endereco', models.TextField()),
                ('telefone', models.CharField(max_length=13, validators=[meuprojeto.empresa.models_base.validar_telefone_moz])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('is_sede', models.BooleanField(default=False, verbose_name='É Sede')),
                ('tipo_societario', models.CharField(default='Sociedade por Quotas', max_length=100)),
            ],
            options={
                'verbose_name': 'Dados da Empresa',
                'verbose_name_plural': 'Dados das Empresas',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('descricao', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'ordering': ['sucursal', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Funcionalidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da funcionalidade do sistema', max_length=100, unique=True)),
                ('codigo', models.CharField(help_text='Código único da funcionalidade', max_length=50, unique=True)),
                ('descricao', models.TextField(help_text='Descrição detalhada da funcionalidade')),
                ('modulo', models.CharField(help_text='Módulo do sistema a que pertence', max_length=50)),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a funcionalidade está ativa no sistema')),
            ],
            options={
                'verbose_name': 'Funcionalidade',
                'verbose_name_plural': 'Funcionalidades',
                'ordering': ['modulo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('nivel', models.CharField(choices=[('JR', 'Júnior'), ('PL', 'Pleno'), ('SR', 'Sênior'), ('SP', 'Especialista'), ('GR', 'Gerente'), ('DR', 'Diretor')], max_length=2)),
                ('descricao', models.TextField(blank=True)),
                ('salario_base', models.DecimalField(decimal_places=2, max_digits=10)),
                ('requisitos', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargos', to='empresa.departamento')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'ordering': ['departamento', 'nivel', 'nome'],
                'unique_together': {('nome', 'nivel', 'departamento')},
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=200)),
                ('data_nascimento', models.DateField()),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1)),
                ('estado_civil', models.CharField(choices=[('S', 'Solteiro(a)'), ('C', 'Casado(a)'), ('D', 'Divorciado(a)'), ('V', 'Viúvo(a)')], max_length=1)),
                ('nuit', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'NUIT deve conter exatamente 9 dígitos.')])),
                ('bi', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator('^\\d{13}$', 'BI deve conter exatamente 13 dígitos.')], verbose_name='BI')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?\\d{9,15}$', 'Número de telefone inválido.')])),
                ('endereco', models.TextField()),
                ('codigo_funcionario', models.CharField(max_length=10, unique=True)),
                ('data_admissao', models.DateField()),
                ('data_demissao', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('AT', 'Ativo'), ('AF', 'Afastado'), ('FE', 'Férias'), ('IN', 'Inativo')], default='AT', max_length=2)),
                ('banco', models.CharField(max_length=100)),
                ('agencia', models.CharField(max_length=10)),
                ('conta', models.CharField(max_length=20)),
                ('observacoes', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios', to='empresa.cargo')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios', to='empresa.departamento')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CT', 'Contrato de Trabalho'), ('CV', 'Curriculum Vitae'), ('CR', 'Certificados e Referências'), ('ID', 'Documentos de Identificação'), ('BA', 'Documentos Bancários'), ('OU', 'Outros')], max_length=2)),
                ('nome', models.CharField(max_length=200)),
                ('arquivo', models.FileField(upload_to='documentos_funcionarios/%Y/%m/')),
                ('descricao', models.TextField(blank=True)),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='empresa.funcionario')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('tipo', models.CharField(default='Filial', max_length=50)),
                ('responsavel', models.CharField(max_length=200)),
                ('provincia', models.CharField(max_length=50)),
                ('cidade', models.CharField(max_length=100)),
                ('bairro', models.CharField(max_length=100)),
                ('endereco', models.TextField()),
                ('telefone', models.CharField(max_length=13, validators=[meuprojeto.empresa.models_base.validar_telefone_moz])),
                ('email', models.EmailField(max_length=254)),
                ('data_abertura', models.DateField()),
                ('ativa', models.BooleanField(default=True)),
                ('empresa_sede', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sucursais', to='empresa.dadosempresa')),
            ],
            options={
                'verbose_name': 'Sucursal',
                'verbose_name_plural': 'Sucursais',
                'ordering': ['codigo'],
            },
        ),
        migrations.AddField(
            model_name='funcionario',
            name='sucursal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios', to='empresa.sucursal'),
        ),
        migrations.AddField(
            model_name='departamento',
            name='sucursal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departamentos', to='empresa.sucursal'),
        ),
        migrations.CreateModel(
            name='PermissaoSucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_acesso', models.IntegerField(choices=[(1, 'Visualização'), (2, 'Edição'), (3, 'Administração')], default=1, help_text='Nível de acesso à funcionalidade')),
                ('data_concessao', models.DateTimeField(auto_now_add=True, help_text='Data em que a permissão foi concedida')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a permissão', null=True)),
                ('concedido_por', models.ForeignKey(help_text='Usuário que concedeu a permissão', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('funcionalidade', models.ForeignKey(help_text='Funcionalidade permitida', on_delete=django.db.models.deletion.CASCADE, to='empresa.funcionalidade')),
                ('sucursal', models.ForeignKey(help_text='Sucursal a que se aplica esta permissão', on_delete=django.db.models.deletion.CASCADE, related_name='permissoes', to='empresa.sucursal')),
            ],
            options={
                'verbose_name': 'Permissão da Sucursal',
                'verbose_name_plural': 'Permissões das Sucursais',
                'ordering': ['sucursal', 'funcionalidade'],
                'unique_together': {('sucursal', 'funcionalidade')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='departamento',
            unique_together={('codigo', 'sucursal')},
        ),
    ]
