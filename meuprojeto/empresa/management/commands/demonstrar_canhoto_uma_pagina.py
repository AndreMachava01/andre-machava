from django.core.management.base import BaseCommand
from meuprojeto.empresa.models_rh import FolhaSalarial, FuncionarioFolha, BeneficioFolha, DescontoFolha
from meuprojeto.empresa.models_base import DadosEmpresa
from datetime import date

class Command(BaseCommand):
    help = 'Demonstra a otimiza√ß√£o do canhoto para caber em uma √∫nica p√°gina'

    def handle(self, *args, **options):
        self.stdout.write('=== CANHOTO OTIMIZADO PARA UMA P√ÅGINA ===')
        self.stdout.write('')
        
        # Buscar dados da empresa
        empresa = DadosEmpresa.objects.filter(is_sede=True).first()
        if empresa:
            self.stdout.write('üè¢ DADOS DA EMPRESA (REAIS):')
            self.stdout.write(f'  Nome: {empresa.nome}')
            self.stdout.write(f'  NUIT: {empresa.nuit}')
            self.stdout.write(f'  Endere√ßo: {empresa.endereco}, {empresa.bairro}, {empresa.cidade}')
            self.stdout.write('')
        else:
            self.stdout.write('‚ùå Nenhuma empresa encontrada no sistema')
            return
        
        # Buscar uma folha existente
        folha = FolhaSalarial.objects.filter(status='FECHADA').first()
        if not folha:
            folha = FolhaSalarial.objects.first()
        
        if not folha:
            self.stdout.write('‚ùå Nenhuma folha encontrada. Crie uma folha primeiro.')
            return
        
        self.stdout.write(f'üìã FOLHA: {folha.mes_referencia.strftime("%B/%Y")} - {folha.get_status_display()}')
        
        # Buscar um funcion√°rio da folha
        funcionario_folha = folha.funcionarios_folha.first()
        if not funcionario_folha:
            self.stdout.write('‚ùå Nenhum funcion√°rio encontrado na folha.')
            return
        
        self.stdout.write(f'üë§ FUNCION√ÅRIO: {funcionario_folha.funcionario.nome_completo}')
        self.stdout.write('')
        
        # Mostrar otimiza√ß√µes implementadas
        self.stdout.write('‚úÖ OTIMIZA√á√ïES PARA UMA P√ÅGINA:')
        self.stdout.write('=' * 60)
        self.stdout.write('')
        
        self.stdout.write('üìè MARGENS REDUZIDAS:')
        self.stdout.write('  ‚Ä¢ ANTES: 72px (margens grandes)')
        self.stdout.write('  ‚Ä¢ AGORA: 40px (margens otimizadas)')
        self.stdout.write('  ‚Ä¢ RESULTADO: Mais espa√ßo para conte√∫do')
        self.stdout.write('')
        
        self.stdout.write('üî§ TAMANHOS DE FONTE OTIMIZADOS:')
        self.stdout.write('  ‚Ä¢ T√≠tulo: 18px ‚Üí 16px')
        self.stdout.write('  ‚Ä¢ Subt√≠tulo: 14px ‚Üí 12px')
        self.stdout.write('  ‚Ä¢ Cabe√ßalhos: 12px ‚Üí 10px')
        self.stdout.write('  ‚Ä¢ Tabelas: 10px ‚Üí 9px')
        self.stdout.write('  ‚Ä¢ Rodap√©: 8px ‚Üí 7px')
        self.stdout.write('')
        
        self.stdout.write('üìê ESPA√áAMENTOS REDUZIDOS:')
        self.stdout.write('  ‚Ä¢ Entre se√ß√µes: 20px ‚Üí 10px')
        self.stdout.write('  ‚Ä¢ Cabe√ßalho: 20px ‚Üí 10px')
        self.stdout.write('  ‚Ä¢ Tabelas: 8px ‚Üí 4px padding')
        self.stdout.write('  ‚Ä¢ Declara√ß√£o: 20px ‚Üí 8px')
        self.stdout.write('')
        
        self.stdout.write('üìã LAYOUT COMPACTO:')
        self.stdout.write('  ‚Ä¢ Dados horizontais (trabalhador + empresa)')
        self.stdout.write('  ‚Ä¢ Resumo salarial com dias e horas integrados')
        self.stdout.write('  ‚Ä¢ Declara√ß√£o e assinatura compactas')
        self.stdout.write('  ‚Ä¢ Sem se√ß√µes redundantes')
        self.stdout.write('')
        
        # Mostrar estrutura final otimizada
        self.stdout.write('üìÑ ESTRUTURA FINAL (UMA P√ÅGINA):')
        self.stdout.write('=' * 60)
        self.stdout.write('')
        
        self.stdout.write('1. üìÑ CABE√áALHO COMPACTO (5% da p√°gina)')
        self.stdout.write('   ‚Ä¢ "RECIBO DE SAL√ÅRIO" (16px)')
        self.stdout.write('   ‚Ä¢ M√™s de Refer√™ncia (12px)')
        self.stdout.write('')
        
        self.stdout.write('2. üë• DADOS HORIZONTAIS (25% da p√°gina)')
        self.stdout.write('   ‚Ä¢ üßë‚Äçüíº TRABALHADOR (esquerda) - 9px')
        self.stdout.write('     - Nome, C√≥digo, Cargo, Departamento, Sucursal, Data')
        self.stdout.write('   ‚Ä¢ üè¢ EMPREGADOR (direita) - 9px')
        self.stdout.write(f'     - Nome: {empresa.nome}')
        self.stdout.write(f'     - NUIT: {empresa.nuit}')
        self.stdout.write(f'     - Endere√ßo: {empresa.endereco}, {empresa.bairro}, {empresa.cidade}')
        self.stdout.write('')
        
        self.stdout.write('3. üí∞ RESUMO SALARIAL COMPLETO (50% da p√°gina)')
        self.stdout.write('   ‚Ä¢ Sal√°rio Base, Benef√≠cios, Descontos (9px)')
        self.stdout.write('   ‚Ä¢ Dias Trabalhados e Horas integrados')
        self.stdout.write('   ‚Ä¢ SAL√ÅRIO L√çQUIDO destacado (10px)')
        self.stdout.write('')
        
        self.stdout.write('4. üìù DECLARA√á√ÉO E ASSINATURA (20% da p√°gina)')
        self.stdout.write('   ‚Ä¢ Texto oficial compacto (14px)')
        self.stdout.write('   ‚Ä¢ Assinatura em 2 linhas (9px)')
        self.stdout.write('   ‚Ä¢ Rodap√© m√≠nimo (7px)')
        self.stdout.write('')
        
        # Benef√≠cios da otimiza√ß√£o
        self.stdout.write('üéØ BENEF√çCIOS DA OTIMIZA√á√ÉO:')
        self.stdout.write('=' * 60)
        self.stdout.write('')
        
        self.stdout.write('‚úÖ CABE EM UMA P√ÅGINA:')
        self.stdout.write('  ‚Ä¢ Layout otimizado para A4')
        self.stdout.write('  ‚Ä¢ Margens e espa√ßamentos reduzidos')
        self.stdout.write('  ‚Ä¢ Fontes compactas mas leg√≠veis')
        self.stdout.write('')
        
        self.stdout.write('‚úÖ IMPRESS√ÉO EFICIENTE:')
        self.stdout.write('  ‚Ä¢ Sem desperd√≠cio de papel')
        self.stdout.write('  ‚Ä¢ Custo reduzido de impress√£o')
        self.stdout.write('  ‚Ä¢ F√°cil arquivamento')
        self.stdout.write('')
        
        self.stdout.write('‚úÖ LEGIBILIDADE MANTIDA:')
        self.stdout.write('  ‚Ä¢ Fontes ainda leg√≠veis')
        self.stdout.write('  ‚Ä¢ Hierarquia visual clara')
        self.stdout.write('  ‚Ä¢ Informa√ß√µes organizadas')
        self.stdout.write('')
        
        self.stdout.write('‚úÖ CONFORMIDADE OFICIAL:')
        self.stdout.write('  ‚Ä¢ Estrutura conforme Minist√©rio do Trabalho')
        self.stdout.write('  ‚Ä¢ Todos os dados obrigat√≥rios presentes')
        self.stdout.write('  ‚Ä¢ Layout profissional')
        self.stdout.write('')
        
        # URLs de acesso
        self.stdout.write('üîó ACESSO AO CANHOTO OTIMIZADO:')
        self.stdout.write('=' * 60)
        self.stdout.write(f'  Visualizar HTML: /rh/folha-salarial/canhoto-visualizar/{folha.id}/{funcionario_folha.funcionario.id}/')
        self.stdout.write(f'  Baixar PDF: /rh/folha-salarial/canhoto/{folha.id}/{funcionario_folha.funcionario.id}/')
        self.stdout.write('')
        
        self.stdout.write('üéâ CANHOTO OTIMIZADO PARA UMA P√ÅGINA!')
        self.stdout.write('   Agora cabe perfeitamente em uma √∫nica p√°gina A4!')
