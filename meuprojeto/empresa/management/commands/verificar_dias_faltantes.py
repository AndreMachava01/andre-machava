from django.core.management.base import BaseCommand
from meuprojeto.empresa.models_rh import Funcionario, Presenca
from datetime import date
import calendar

class Command(BaseCommand):
    help = 'Verifica exatamente quais dias √∫teis est√£o faltando'

    def handle(self, *args, **options):
        self.stdout.write('=== VERIFICA√á√ÉO DE DIAS FALTANTES ===')
        self.stdout.write('')
        
        joao = Funcionario.objects.filter(nome_completo__icontains='joao silva').first()
        
        # Calcular dias √∫teis de setembro
        dias_uteis = []
        for dia in range(1, 31):
            try:
                data = date(2025, 9, dia)
                if data.weekday() < 5:  # Segunda a sexta
                    dias_uteis.append(data)
            except ValueError:
                pass
        
        self.stdout.write(f'üìÖ DIAS √öTEIS DE SETEMBRO ({len(dias_uteis)}):')
        for d in dias_uteis:
            self.stdout.write(f'   {d.strftime("%d/%m")} - {d.strftime("%A")}')
        self.stdout.write('')
        
        # Verificar presen√ßas existentes
        presencas_existentes = set()
        for p in Presenca.objects.filter(funcionario=joao, data__year=2025, data__month=9):
            presencas_existentes.add(p.data)
        
        self.stdout.write('üìã DIAS COM PRESEN√áA REGISTRADA:')
        dias_com_presenca = [d for d in dias_uteis if d in presencas_existentes]
        for d in dias_com_presenca:
            self.stdout.write(f'   {d.strftime("%d/%m")} - {d.strftime("%A")}')
        self.stdout.write('')
        
        # Encontrar dias faltantes
        dias_faltantes = [d for d in dias_uteis if d not in presencas_existentes]
        
        self.stdout.write(f'‚ùå DIAS √öTEIS SEM PRESEN√áA ({len(dias_faltantes)}):')
        for d in dias_faltantes:
            self.stdout.write(f'   {d.strftime("%d/%m")} - {d.strftime("%A")}')
        self.stdout.write('')
        
        self.stdout.write('üìä RESUMO:')
        self.stdout.write(f'   ‚Ä¢ Total de dias √∫teis: {len(dias_uteis)}')
        self.stdout.write(f'   ‚Ä¢ Dias com presen√ßa: {len(dias_com_presenca)}')
        self.stdout.write(f'   ‚Ä¢ Dias faltantes: {len(dias_faltantes)}')
        self.stdout.write('')
        
        if len(dias_faltantes) > 0:
            self.stdout.write('üîß A√á√ÉO NECESS√ÅRIA:')
            self.stdout.write('   ‚Ä¢ Criar presen√ßas de falta para os dias faltantes')
            self.stdout.write('   ‚Ä¢ Marcar como tipo que desconta sal√°rio')
        else:
            self.stdout.write('‚úÖ NENHUM DIA FALTANTE ENCONTRADO')
            self.stdout.write('   ‚Ä¢ Verificar se o c√°lculo de dias trabalhados est√° correto')
        
        self.stdout.write('')
        self.stdout.write('üéØ VERIFICA√á√ÉO CONCLU√çDA!')
