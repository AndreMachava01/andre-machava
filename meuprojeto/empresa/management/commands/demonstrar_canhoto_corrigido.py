from django.core.management.base import BaseCommand
from meuprojeto.empresa.models_rh import FolhaSalarial, FuncionarioFolha, BeneficioFolha, DescontoFolha
from meuprojeto.empresa.models_base import DadosEmpresa
from datetime import date

class Command(BaseCommand):
    help = 'Demonstra as corre√ß√µes do canhoto: cabe√ßalho limpo, dados horizontais, sem redund√¢ncia'

    def handle(self, *args, **options):
        self.stdout.write('=== CANHOTO CORRIGIDO - MELHORIAS IMPLEMENTADAS ===')
        self.stdout.write('')
        
        # Buscar dados da empresa
        empresa = DadosEmpresa.objects.filter(is_sede=True).first()
        if empresa:
            self.stdout.write('üè¢ DADOS DA EMPRESA (REAIS):')
            self.stdout.write(f'  Nome: {empresa.nome}')
            self.stdout.write(f'  NUIT: {empresa.nuit}')
            self.stdout.write(f'  Endere√ßo: {empresa.endereco}, {empresa.bairro}, {empresa.cidade}')
            self.stdout.write('')
        else:
            self.stdout.write('‚ùå Nenhuma empresa encontrada no sistema')
            return
        
        # Buscar uma folha existente
        folha = FolhaSalarial.objects.filter(status='FECHADA').first()
        if not folha:
            folha = FolhaSalarial.objects.first()
        
        if not folha:
            self.stdout.write('‚ùå Nenhuma folha encontrada. Crie uma folha primeiro.')
            return
        
        self.stdout.write(f'üìã FOLHA: {folha.mes_referencia.strftime("%B/%Y")} - {folha.get_status_display()}')
        
        # Buscar um funcion√°rio da folha
        funcionario_folha = folha.funcionarios_folha.first()
        if not funcionario_folha:
            self.stdout.write('‚ùå Nenhum funcion√°rio encontrado na folha.')
            return
        
        self.stdout.write(f'üë§ FUNCION√ÅRIO: {funcionario_folha.funcionario.nome_completo}')
        self.stdout.write('')
        
        # Mostrar corre√ß√µes implementadas
        self.stdout.write('‚úÖ CORRE√á√ïES IMPLEMENTADAS:')
        self.stdout.write('=' * 60)
        self.stdout.write('')
        
        self.stdout.write('1. ‚ùå REMOVIDO: "üìÑ Modelo de Recibo de Sal√°rio ‚Äì Conforme Minist√©rio do Trabalho"')
        self.stdout.write('   ‚úÖ AGORA: Cabe√ßalho limpo com apenas "RECIBO DE SAL√ÅRIO"')
        self.stdout.write('')
        
        self.stdout.write('2. ‚ùå REMOVIDO: Se√ß√£o DETALHAMENTO redundante')
        self.stdout.write('   ‚úÖ AGORA: Dados j√° aparecem no RESUMO SALARIAL (sem duplica√ß√£o)')
        self.stdout.write('')
        
        self.stdout.write('3. ‚ùå ANTES: Dados do trabalhador e empresa em se√ß√µes separadas')
        self.stdout.write('   ‚úÖ AGORA: Dados organizados HORIZONTALMENTE (lado a lado)')
        self.stdout.write('')
        
        self.stdout.write('4. ‚ùå ANTES: Dias de trabalho e horas em se√ß√£o separada')
        self.stdout.write('   ‚úÖ AGORA: Integrados no RESUMO SALARIAL')
        self.stdout.write('')
        
        # Mostrar estrutura final
        self.stdout.write('üìÑ ESTRUTURA FINAL DO CANHOTO:')
        self.stdout.write('=' * 60)
        self.stdout.write('')
        
        self.stdout.write('1. üìÑ CABE√áALHO LIMPO')
        self.stdout.write('   ‚Ä¢ "RECIBO DE SAL√ÅRIO"')
        self.stdout.write('   ‚Ä¢ M√™s de Refer√™ncia')
        self.stdout.write('')
        
        self.stdout.write('2. üë• DADOS HORIZONTAIS')
        self.stdout.write('   ‚Ä¢ üßë‚Äçüíº TRABALHADOR (esquerda)')
        self.stdout.write('     - Nome, C√≥digo, Cargo, Departamento, Sucursal, Data Admiss√£o')
        self.stdout.write('   ‚Ä¢ üè¢ EMPREGADOR (direita)')
        self.stdout.write(f'     - Nome: {empresa.nome}')
        self.stdout.write(f'     - NUIT: {empresa.nuit}')
        self.stdout.write(f'     - Endere√ßo: {empresa.endereco}, {empresa.bairro}, {empresa.cidade}')
        self.stdout.write('')
        
        self.stdout.write('3. üí∞ RESUMO SALARIAL COMPLETO')
        self.stdout.write('   ‚Ä¢ Sal√°rio Base')
        self.stdout.write('   ‚Ä¢ Subs√≠dio de Alimenta√ß√£o')
        self.stdout.write('   ‚Ä¢ Subs√≠dio de Transporte')
        self.stdout.write('   ‚Ä¢ Horas Extras (Xh)')
        self.stdout.write('   ‚Ä¢ Sal√°rio Bruto')
        self.stdout.write('   ‚Ä¢ INSS (3%)')
        self.stdout.write('   ‚Ä¢ IRPS')
        self.stdout.write('   ‚Ä¢ Desconto Adicional')
        self.stdout.write('   ‚Ä¢ Total Descontos')
        self.stdout.write('   ‚Ä¢ [linha em branco]')
        self.stdout.write('   ‚Ä¢ Dias Trabalhados')
        self.stdout.write('   ‚Ä¢ Horas Trabalhadas')
        self.stdout.write('   ‚Ä¢ [linha em branco]')
        self.stdout.write('   ‚Ä¢ SAL√ÅRIO L√çQUIDO')
        self.stdout.write('')
        
        self.stdout.write('4. üìù DECLARA√á√ÉO')
        self.stdout.write('   ‚Ä¢ Texto oficial conforme Minist√©rio do Trabalho')
        self.stdout.write('   ‚Ä¢ Assinatura com data e nome')
        self.stdout.write('')
        
        # Benef√≠cios das corre√ß√µes
        self.stdout.write('üéØ BENEF√çCIOS DAS CORRE√á√ïES:')
        self.stdout.write('=' * 60)
        self.stdout.write('')
        
        self.stdout.write('‚úÖ CABE√áALHO MAIS LIMPO:')
        self.stdout.write('  ‚Ä¢ Remove texto desnecess√°rio')
        self.stdout.write('  ‚Ä¢ Foco no essencial')
        self.stdout.write('  ‚Ä¢ Apar√™ncia mais profissional')
        self.stdout.write('')
        
        self.stdout.write('‚úÖ LAYOUT HORIZONTAL:')
        self.stdout.write('  ‚Ä¢ Melhor aproveitamento do espa√ßo')
        self.stdout.write('  ‚Ä¢ Compara√ß√£o visual entre trabalhador e empresa')
        self.stdout.write('  ‚Ä¢ Folha mais compacta')
        self.stdout.write('')
        
        self.stdout.write('‚úÖ SEM REDUND√ÇNCIA:')
        self.stdout.write('  ‚Ä¢ Dados aparecem apenas uma vez')
        self.stdout.write('  ‚Ä¢ Informa√ß√µes organizadas logicamente')
        self.stdout.write('  ‚Ä¢ Folha mais concisa')
        self.stdout.write('')
        
        self.stdout.write('‚úÖ RESUMO SALARIAL COMPLETO:')
        self.stdout.write('  ‚Ä¢ Todos os dados financeiros em um local')
        self.stdout.write('  ‚Ä¢ Dias e horas integrados ao resumo')
        self.stdout.write('  ‚Ä¢ F√°cil visualiza√ß√£o dos totais')
        self.stdout.write('')
        
        # URLs de acesso
        self.stdout.write('üîó ACESSO AO CANHOTO CORRIGIDO:')
        self.stdout.write('=' * 60)
        self.stdout.write(f'  Visualizar HTML: /rh/folha-salarial/canhoto-visualizar/{folha.id}/{funcionario_folha.funcionario.id}/')
        self.stdout.write(f'  Baixar PDF: /rh/folha-salarial/canhoto/{folha.id}/{funcionario_folha.funcionario.id}/')
        self.stdout.write('')
        
        self.stdout.write('üéâ CANHOTO OTIMIZADO E CORRIGIDO!')
        self.stdout.write('   Agora √© mais limpo, organizado e sem redund√¢ncias!')
