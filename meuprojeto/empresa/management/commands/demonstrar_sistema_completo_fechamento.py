from django.core.management.base import BaseCommand
from meuprojeto.empresa.models_rh import FolhaSalarial, Funcionario, FuncionarioFolha
from datetime import date
from django.core.exceptions import ValidationError

class Command(BaseCommand):
    help = 'Demonstra o sistema completo de fechamento da folha de sal√°rio'

    def handle(self, *args, **options):
        self.stdout.write('=' * 80)
        self.stdout.write('üéØ SISTEMA COMPLETO DE FECHAMENTO DA FOLHA DE SAL√ÅRIO')
        self.stdout.write('=' * 80)
        self.stdout.write('')
        
        # Buscar folha de setembro
        folha = FolhaSalarial.objects.filter(mes_referencia__year=2025, mes_referencia__month=9).first()
        
        if not folha:
            self.stdout.write('‚ùå Folha de setembro n√£o encontrada')
            return
        
        self.stdout.write('üìã DEMONSTRA√á√ÉO DO SISTEMA DE FECHAMENTO')
        self.stdout.write('=' * 50)
        self.stdout.write('')
        
        # 1. Estado inicial
        self.stdout.write('1Ô∏è‚É£ ESTADO INICIAL DA FOLHA:')
        self.stdout.write(f'   ‚Ä¢ M√™s: {folha.mes_referencia.strftime("%B/%Y")}')
        self.stdout.write(f'   ‚Ä¢ Status: {folha.get_status_display()}')
        self.stdout.write(f'   ‚Ä¢ Total Bruto: {folha.total_bruto} MT')
        self.stdout.write(f'   ‚Ä¢ Total L√≠quido: {folha.total_liquido} MT')
        self.stdout.write(f'   ‚Ä¢ Funcion√°rios: {folha.total_funcionarios}')
        self.stdout.write('')
        
        # 2. Valida√ß√£o
        self.stdout.write('2Ô∏è‚É£ VALIDA√á√ÉO ANTES DE FECHAR:')
        validacao = folha.validar_antes_fechar()
        
        if validacao['valido']:
            self.stdout.write('   ‚úÖ Folha v√°lida para fechamento')
        else:
            self.stdout.write('   ‚ùå Folha com problemas:')
            for erro in validacao['erros']:
                self.stdout.write(f'      - {erro}')
        
        if validacao['avisos']:
            self.stdout.write('   ‚ö†Ô∏è  Avisos encontrados:')
            for aviso in validacao['avisos']:
                self.stdout.write(f'      - {aviso}')
        self.stdout.write('')
        
        # 3. Fechamento
        if folha.pode_fechar():
            self.stdout.write('3Ô∏è‚É£ FECHANDO A FOLHA:')
            try:
                resultado = folha.fechar_folha(observacoes='Demonstra√ß√£o do sistema de fechamento')
                
                self.stdout.write('   ‚úÖ Folha fechada com sucesso!')
                self.stdout.write(f'   ‚Ä¢ Data de fechamento: {resultado["data_fechamento"]}')
                self.stdout.write(f'   ‚Ä¢ Status atual: {folha.get_status_display()}')
                self.stdout.write('')
                
                # 4. Reabertura
                self.stdout.write('4Ô∏è‚É£ REABRINDO A FOLHA:')
                if folha.pode_reabrir():
                    resultado_reabrir = folha.reabrir_folha(motivo='Demonstra√ß√£o de reabertura')
                    
                    self.stdout.write('   ‚úÖ Folha reaberta com sucesso!')
                    self.stdout.write(f'   ‚Ä¢ Status: {resultado_reabrir["status"]}')
                    self.stdout.write(f'   ‚Ä¢ Motivo: {resultado_reabrir["motivo"]}')
                    self.stdout.write('')
                    
                    # Fechar novamente
                    folha.fechar_folha(observacoes='Fechamento ap√≥s demonstra√ß√£o de reabertura')
                    self.stdout.write('   ‚Ä¢ Folha fechada novamente')
                    self.stdout.write('')
                
                # 5. Marcar como paga
                self.stdout.write('5Ô∏è‚É£ MARCANDO COMO PAGA:')
                if folha.pode_marcar_paga():
                    resultado_paga = folha.marcar_como_paga(
                        data_pagamento=date.today(),
                        observacoes='Demonstra√ß√£o de pagamento'
                    )
                    
                    self.stdout.write('   ‚úÖ Folha marcada como paga!')
                    self.stdout.write(f'   ‚Ä¢ Data de pagamento: {resultado_paga["data_pagamento"]}')
                    self.stdout.write(f'   ‚Ä¢ Status final: {resultado_paga["status"]}')
                    self.stdout.write('')
                
            except ValidationError as e:
                self.stdout.write(f'   ‚ùå Erro: {e}')
        
        # 6. Resumo final
        self.stdout.write('6Ô∏è‚É£ RESUMO FINAL:')
        resumo = folha.get_resumo_fechamento()
        
        self.stdout.write(f'   ‚Ä¢ M√™s: {resumo["mes_referencia"]}')
        self.stdout.write(f'   ‚Ä¢ Status: {resumo["status"]}')
        self.stdout.write(f'   ‚Ä¢ Total funcion√°rios: {resumo["total_funcionarios"]}')
        self.stdout.write(f'   ‚Ä¢ Total bruto: {resumo["total_bruto"]} MT')
        self.stdout.write(f'   ‚Ä¢ Total descontos: {resumo["total_descontos"]} MT')
        self.stdout.write(f'   ‚Ä¢ Total l√≠quido: {resumo["total_liquido"]} MT')
        self.stdout.write('')
        
        # 7. Funcionalidades implementadas
        self.stdout.write('7Ô∏è‚É£ FUNCIONALIDADES IMPLEMENTADAS:')
        self.stdout.write('')
        
        self.stdout.write('   üîß NO MODELO FolhaSalarial:')
        self.stdout.write('      ‚Ä¢ validar_antes_fechar() - Valida dados antes de fechar')
        self.stdout.write('      ‚Ä¢ fechar_folha() - Fecha com valida√ß√µes e observa√ß√µes')
        self.stdout.write('      ‚Ä¢ reabrir_folha() - Reabre com motivo obrigat√≥rio')
        self.stdout.write('      ‚Ä¢ marcar_como_paga() - Marca como paga com data')
        self.stdout.write('      ‚Ä¢ pode_editar() - Verifica se pode editar')
        self.stdout.write('      ‚Ä¢ pode_fechar() - Verifica se pode fechar')
        self.stdout.write('      ‚Ä¢ pode_reabrir() - Verifica se pode reabrir')
        self.stdout.write('      ‚Ä¢ pode_marcar_paga() - Verifica se pode marcar como paga')
        self.stdout.write('      ‚Ä¢ get_resumo_fechamento() - Resumo para fechamento')
        self.stdout.write('')
        
        self.stdout.write('   üåê NO VIEWS:')
        self.stdout.write('      ‚Ä¢ rh_folha_validar_fechamento - P√°gina de valida√ß√£o')
        self.stdout.write('      ‚Ä¢ rh_folha_fechar - Fecha a folha')
        self.stdout.write('      ‚Ä¢ rh_folha_reabrir - Reabre a folha')
        self.stdout.write('      ‚Ä¢ rh_folha_marcar_paga - Marca como paga')
        self.stdout.write('')
        
        self.stdout.write('   üé® NOS TEMPLATES:')
        self.stdout.write('      ‚Ä¢ validar_fechamento.html - Interface de valida√ß√£o')
        self.stdout.write('      ‚Ä¢ reabrir.html - Interface de reabertura')
        self.stdout.write('      ‚Ä¢ marcar_paga.html - Interface de pagamento')
        self.stdout.write('      ‚Ä¢ detail.html - Bot√µes condicionais atualizados')
        self.stdout.write('')
        
        self.stdout.write('   üîó NAS URLs:')
        self.stdout.write('      ‚Ä¢ folha-salarial/validar-fechamento/<id>/')
        self.stdout.write('      ‚Ä¢ folha-salarial/fechar/<id>/')
        self.stdout.write('      ‚Ä¢ folha-salarial/reabrir/<id>/')
        self.stdout.write('      ‚Ä¢ folha-salarial/marcar-paga/<id>/')
        self.stdout.write('')
        
        # 8. Valida√ß√µes implementadas
        self.stdout.write('8Ô∏è‚É£ VALIDA√á√ïES IMPLEMENTADAS:')
        self.stdout.write('')
        
        self.stdout.write('   ‚úÖ ANTES DE FECHAR:')
        self.stdout.write('      ‚Ä¢ Verifica se h√° funcion√°rios na folha')
        self.stdout.write('      ‚Ä¢ Verifica se todos t√™m sal√°rio base > 0')
        self.stdout.write('      ‚Ä¢ Verifica se todos t√™m dados de presen√ßa')
        self.stdout.write('      ‚Ä¢ Verifica se h√° funcion√°rios com sal√°rio l√≠quido negativo')
        self.stdout.write('      ‚Ä¢ Verifica se os totais est√£o calculados')
        self.stdout.write('      ‚Ä¢ Verifica se h√° funcion√°rios ativos n√£o inclu√≠dos')
        self.stdout.write('')
        
        self.stdout.write('   ‚ö†Ô∏è  AVISOS MOSTRADOS:')
        self.stdout.write('      ‚Ä¢ Funcion√°rios sem presen√ßas registradas')
        self.stdout.write('      ‚Ä¢ Funcion√°rios com sal√°rio l√≠quido negativo')
        self.stdout.write('      ‚Ä¢ Totais n√£o calculados')
        self.stdout.write('      ‚Ä¢ Funcion√°rios ativos n√£o inclu√≠dos na folha')
        self.stdout.write('')
        
        # 9. Controle de permiss√µes
        self.stdout.write('9Ô∏è‚É£ CONTROLE DE PERMISS√ïES:')
        self.stdout.write('')
        
        self.stdout.write('   üîí BLOQUEIOS IMPLEMENTADOS:')
        self.stdout.write('      ‚Ä¢ S√≥ permite fechar folhas ABERTAS')
        self.stdout.write('      ‚Ä¢ S√≥ permite reabrir folhas FECHADAS')
        self.stdout.write('      ‚Ä¢ S√≥ permite marcar como paga folhas FECHADAS')
        self.stdout.write('      ‚Ä¢ Bot√µes aparecem condicionalmente na interface')
        self.stdout.write('')
        
        # 10. Benef√≠cios do sistema
        self.stdout.write('üîü BENEF√çCIOS DO SISTEMA:')
        self.stdout.write('')
        
        self.stdout.write('   üéØ SEGURAN√áA:')
        self.stdout.write('      ‚Ä¢ Valida√ß√µes autom√°ticas antes de fechar')
        self.stdout.write('      ‚Ä¢ Controle de permiss√µes rigoroso')
        self.stdout.write('      ‚Ä¢ Hist√≥rico de altera√ß√µes com observa√ß√µes')
        self.stdout.write('      ‚Ä¢ Preven√ß√£o de fechamento com dados inconsistentes')
        self.stdout.write('')
        
        self.stdout.write('   üöÄ EFICI√äNCIA:')
        self.stdout.write('      ‚Ä¢ Interface intuitiva e clara')
        self.stdout.write('      ‚Ä¢ Valida√ß√µes em tempo real')
        self.stdout.write('      ‚Ä¢ Resumo completo antes de fechar')
        self.stdout.write('      ‚Ä¢ Processo guiado passo a passo')
        self.stdout.write('')
        
        self.stdout.write('   üìä CONTROLE:')
        self.stdout.write('      ‚Ä¢ Visibilidade total do processo')
        self.stdout.write('      ‚Ä¢ Avisos e erros claros')
        self.stdout.write('      ‚Ä¢ Possibilidade de reabertura com justificativa')
        self.stdout.write('      ‚Ä¢ Rastreabilidade completa das a√ß√µes')
        self.stdout.write('')
        
        self.stdout.write('üéâ SISTEMA DE FECHAMENTO COMPLETO E FUNCIONAL!')
        self.stdout.write('')
        self.stdout.write('‚úÖ IMPLEMENTA√á√ÉO CONCLU√çDA COM SUCESSO!')
        self.stdout.write('')
        self.stdout.write('üöÄ O sistema agora possui um fluxo robusto e seguro')
        self.stdout.write('   para fechamento, reabertura e controle de pagamento')
        self.stdout.write('   das folhas salariais!')
