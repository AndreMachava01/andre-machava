from django.core.management.base import BaseCommand
from meuprojeto.empresa.models_rh import Funcionario, Presenca, TipoPresenca, FuncionarioFolha, FolhaSalarial
from datetime import date

class Command(BaseCommand):
    help = 'Verifica por que falta n√£o justificada n√£o est√° descontando sal√°rio'

    def handle(self, *args, **options):
        self.stdout.write('=== VERIFICA√á√ÉO: FALTA N√ÉO JUSTIFICADA ===')
        self.stdout.write('')
        
        # Buscar Jo√£o Silva
        joao = Funcionario.objects.filter(nome_completo__icontains='joao silva').first()
        if not joao:
            self.stdout.write('‚ùå Jo√£o Silva n√£o encontrado')
            return
        
        self.stdout.write(f'üìã FUNCION√ÅRIO: {joao.nome_completo}')
        self.stdout.write('')
        
        # Buscar presen√ßas de falta n√£o justificada
        presencas_fi = Presenca.objects.filter(
            funcionario=joao,
            data__year=2025,
            data__month=9,
            tipo_presenca__codigo='FI'
        )
        
        self.stdout.write(f'‚ùå PRESEN√áAS FALTA INJUSTIFICADA: {presencas_fi.count()}')
        for p in presencas_fi:
            self.stdout.write(f'   {p.data.strftime("%d/%m")} - {p.tipo_presenca.nome} (desconta: {p.tipo_presenca.desconta_salario})')
        self.stdout.write('')
        
        # Verificar se o tipo FI desconta sal√°rio
        tipo_fi = TipoPresenca.objects.filter(codigo='FI').first()
        if tipo_fi:
            self.stdout.write(f'üîç TIPO FALTA INJUSTIFICADA:')
            self.stdout.write(f'   ‚Ä¢ Nome: {tipo_fi.nome}')
            self.stdout.write(f'   ‚Ä¢ C√≥digo: {tipo_fi.codigo}')
            self.stdout.write(f'   ‚Ä¢ Desconta sal√°rio: {tipo_fi.desconta_salario}')
            self.stdout.write(f'   ‚Ä¢ Ativo: {tipo_fi.ativo}')
        else:
            self.stdout.write('‚ùå Tipo Falta Injustificada n√£o encontrado!')
        self.stdout.write('')
        
        # Verificar folha salarial
        folha = FolhaSalarial.objects.filter(mes_referencia__year=2025, mes_referencia__month=9).first()
        if not folha:
            self.stdout.write('‚ùå Folha de setembro n√£o encontrada')
            return
        
        funcionario_folha = FuncionarioFolha.objects.filter(folha=folha, funcionario=joao).first()
        if not funcionario_folha:
            self.stdout.write('‚ùå Funcion√°rio n√£o encontrado na folha')
            return
        
        self.stdout.write('üí∞ DADOS DA FOLHA:')
        self.stdout.write(f'   ‚Ä¢ Sal√°rio Base: {funcionario_folha.salario_base} MT')
        self.stdout.write(f'   ‚Ä¢ Desconto por faltas: {funcionario_folha.desconto_faltas} MT')
        self.stdout.write(f'   ‚Ä¢ Total descontos: {funcionario_folha.total_descontos} MT')
        self.stdout.write(f'   ‚Ä¢ Sal√°rio l√≠quido: {funcionario_folha.salario_liquido} MT')
        self.stdout.write('')
        
        # Recalcular sal√°rio para ver se aplica desconto
        self.stdout.write('üîÑ RECALCULANDO SAL√ÅRIO...')
        funcionario_folha.calcular_salario()
        
        self.stdout.write('üí∞ AP√ìS REC√ÅLCULO:')
        self.stdout.write(f'   ‚Ä¢ Desconto por faltas: {funcionario_folha.desconto_faltas} MT')
        self.stdout.write(f'   ‚Ä¢ Total descontos: {funcionario_folha.total_descontos} MT')
        self.stdout.write(f'   ‚Ä¢ Sal√°rio l√≠quido: {funcionario_folha.salario_liquido} MT')
        self.stdout.write('')
        
        # Verificar presen√ßas que descontam sal√°rio
        presencas_desconta = Presenca.objects.filter(
            funcionario=joao,
            data__year=2025,
            data__month=9,
            tipo_presenca__desconta_salario=True
        )
        
        self.stdout.write(f'üîç PRESEN√áAS QUE DESCONTAM SAL√ÅRIO: {presencas_desconta.count()}')
        for p in presencas_desconta:
            self.stdout.write(f'   {p.data.strftime("%d/%m")} - {p.tipo_presenca.nome} (desconta: {p.tipo_presenca.desconta_salario})')
        self.stdout.write('')
        
        # Diagn√≥stico
        if presencas_fi.count() > 0 and funcionario_folha.desconto_faltas == 0:
            self.stdout.write('‚ùå PROBLEMA IDENTIFICADO:')
            self.stdout.write('   ‚Ä¢ H√° falta n√£o justificada registrada')
            self.stdout.write('   ‚Ä¢ Mas n√£o h√° desconto aplicado')
            self.stdout.write('   ‚Ä¢ Verificar se o tipo FI est√° configurado para desconta_salario=True')
        elif presencas_fi.count() == 0:
            self.stdout.write('‚ÑπÔ∏è  NENHUMA FALTA N√ÉO JUSTIFICADA ENCONTRADA')
            self.stdout.write('   ‚Ä¢ Verificar se a falta est√° marcada corretamente no calend√°rio')
        else:
            self.stdout.write('‚úÖ SISTEMA FUNCIONANDO CORRETAMENTE')
            self.stdout.write('   ‚Ä¢ Faltas est√£o sendo descontadas')
        
        self.stdout.write('')
        self.stdout.write('üéØ VERIFICA√á√ÉO CONCLU√çDA!')
